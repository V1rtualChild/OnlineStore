from abc import ABC, abstractmethod

class DeliveryStrategy(ABC):
    @abstractmethod
    def deliver(self, order):
        pass

class CourierDelivery(DeliveryStrategy):
    def deliver(self, order):
        print(f"üöó –ö—É—Ä'—î—Ä –¥–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ —ñ–º‚Äô—è {order.customer_name}.")

class NovaPoshtaDelivery(DeliveryStrategy):
    def deliver(self, order):
        print(f"üì¶ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è {order.customer_name} –±—É–¥–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ –ù–æ–≤—É –ü–æ—à—Ç—É.")

class PickupDelivery(DeliveryStrategy):
    def deliver(self, order):
        print(f"üè† {order.customer_name} –º–æ–∂–µ –∑–∞–±—Ä–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –∑ –ø—É–Ω–∫—Ç—É –≤–∏–¥–∞—á—ñ.")
